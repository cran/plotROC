% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_roc.R
\docType{data}
\name{StatRoc}
\alias{StatRoc}
\alias{stat_roc}
\title{Calculate the empirical Receiver Operating Characteristic curve}
\format{
An object of class \code{StatRoc} (inherits from \code{Stat}, \code{ggproto}, \code{gg}) of length 6.
}
\usage{
StatRoc

stat_roc(
  mapping = NULL,
  data = NULL,
  geom = "roc",
  position = "identity",
  show.legend = NA,
  inherit.aes = TRUE,
  na.rm = TRUE,
  max.num.points = 1000,
  increasing = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{geom}{The geometric object to use to display the data, either as a
\code{ggproto} \code{Geom} subclass or as a string naming the geom stripped of the
\code{geom_} prefix (e.g. \code{"point"} rather than \code{"geom_point"})}

\item{position}{Position adjustment, either as a string naming the adjustment
(e.g. \code{"jitter"} to use \code{position_jitter}), or the result of a call to a
position adjustment function. Use the latter if you need to change the
settings of the adjustment.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{na.rm}{Remove missing observations}

\item{max.num.points}{maximum number of points to plot}

\item{increasing}{TRUE (default) if M is positively associated with Pr(D = 1), if FALSE, assumes M is negatively associated with Pr(D = 1)}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
Given a binary outcome d and continuous measurement m, computes the empirical
ROC curve for assessing the classification accuracy of m
}
\section{Aesthetics}{

\code{stat_roc} understands the following aesthetics (required aesthetics
are in bold):
\itemize{
  \item \strong{\code{m}} The continuous biomarker/predictor
  \item \strong{\code{d}} The binary outcome, if not coded as 0/1, the 
  smallest level in sort order is assumed to be 0, with a warning
  \item \code{alpha} Controls the label alpha, see also \code{linealpha} and \code{pointalpha}
  \item \code{color}
  \item \code{linetype} 
  \item \code{size} Controls the line weight, see also \code{pointsize} and \code{labelsize}
}
}

\section{Computed variables}{

\describe{
  \item{false_positive_fraction}{estimate of false positive fraction}
  \item{true_positive_fraction}{estimate of true positive fraction}
  \item{cutoffs}{values of m at which estimates are calculated}
}
}

\examples{
D.ex <- rbinom(50, 1, .5)
rocdata <- data.frame(D = c(D.ex, D.ex), 
                   M = c(rnorm(50, mean = D.ex, sd = .4), rnorm(50, mean = D.ex, sd = 1)), 
                   Z = c(rep("A", 50), rep("B", 50)))

ggplot(rocdata, aes(m = M, d = D)) + stat_roc()
}
\keyword{datasets}
